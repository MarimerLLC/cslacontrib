<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.Web.Mvc</name>
    </assembly>
    <members>
        <member name="T:System.Web.Mvc.ViewResult">
            <summary>
            Class used to render a view using an <see cref="T:System.Web.Mvc.IView"/> returned by a <see cref="T:System.Web.Mvc.IViewEngine"/>.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ViewResultBase">
            <summary>
            Base class used to supply the model to the view and then render the view to the response.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ActionResult">
            <summary>
            Encapsulates the result of an action method and is used to perform a 
            framework level operation on the action method's behalf.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ActionResult.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            Enables processing of the result of an action method by a custom type that inherits from <see cref="T:System.Web.Mvc.ActionResult"/>.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:System.Web.Mvc.ViewResultBase.ExecuteResult(System.Web.Mvc.ControllerContext)">
            <summary>
            When called by the action invoker, renders the view to the response.
            </summary>
            <param name="context"></param>
        </member>
        <member name="M:System.Web.Mvc.ViewResultBase.FindView(System.Web.Mvc.ControllerContext)">
            <summary>
            When overridden, returns the <see cref="T:System.Web.Mvc.ViewEngineResult"/> used to render the view.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.Mvc.ViewResultBase.TempData">
            <summary>
            Gets or sets the <see cref="T:System.Web.Mvc.TempDataDictionary"/> for this result.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewResultBase.View">
            <summary>
            Gets or sets the <see cref="T:System.Web.Mvc.IView"/> that is rendered to the response.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewResultBase.ViewData">
            <summary>
            Gets or sets the view data <see cref="T:System.Web.Mvc.ViewDataDictionary"/> for this result.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewResultBase.ViewEngineCollection">
            <summary>
            Gets or sets the view engines (<see cref="T:System.Web.Mvc.ViewEngineCollection"/>) associated with this result.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewResultBase.ViewName">
            <summary>
            The name of the view to be rendered.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ViewResult.FindView(System.Web.Mvc.ControllerContext)">
            <summary>
            Searches the registered view engines and returns the <see cref="T:System.Web.Mvc.ViewEngineResult"/> used to render the view.
            </summary>
            <param name="context"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.Mvc.ViewResult.MasterName">
            <summary>
            The name of the master view (such as a master page or template) to use when rendering the view.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.IActionInvoker">
            <summary>
            Defines the contract for an action invoker, used to invoke an action in response to an http request.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.IActionInvoker.InvokeAction(System.Web.Mvc.ControllerContext,System.String)">
            <summary>
            Invokes the specified action.
            </summary>
            <param name="controllerContext"></param>
            <param name="actionName">The name of the action.</param>
            <returns>True if the action was found, otherwise false.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Renders the specified partial view.
            </summary>
            <param name="htmlHelper"></param>
            <param name="partialViewName">The name of the partial view</param>
        </member>
        <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Renders the specified partial view replacing its ViewData property with the 
            supplied <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewDataDictionary</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="partialViewName">The name of the partial view</param>
        </member>
        <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Renders the specified partial view passing in a copy of the current 
            <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewDataDictionary</see>, but 
            with the Model property set to the specified model.
            </summary>
            <param name="htmlHelper"></param>
            <param name="partialViewName">The name of the partial view</param>
        </member>
        <member name="M:System.Web.Mvc.Html.RenderPartialExtensions.RenderPartial(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.ViewDataDictionary)">
            <summary>
            Renders the specified partial view, replacing the partial view's ViewData property with the 
            supplied <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewDataDictionary</see>. The Model 
            property of the view data is set to the specified model.
            </summary>
            <param name="htmlHelper"></param>
            <param name="partialViewName">The name of the partial view</param>
            <param name="model">The model for the partial view</param>
            <param name="viewData">The view data for the partial view</param>
        </member>
        <member name="T:System.Web.Mvc.FileStreamResult">
            <summary>
            Sends binary content to the response via a <see cref="T:System.IO.Stream"/>.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.FileResult">
            <summary>
            Base class used to send binary content to the response
            </summary>
        </member>
        <member name="P:System.Web.Mvc.FileResult.ContentType">
            <summary>
            The content type to use for the response.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.FileResult.FileDownloadName">
            <summary>
            If specified, sets the content-disposition header so that a file download dialog appears in the browesr with the specified file name.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.FileStreamResult.#ctor(System.IO.Stream,System.String)">
            <summary>
            Initializes a new instance of <see cref="T:System.Web.Mvc.FileStreamResult"/>
            </summary>
            <param name="fileStream">The stream to send to the response</param>
            <param name="contentType">The content type to use for the response</param>
        </member>
        <member name="P:System.Web.Mvc.FileStreamResult.FileStream">
            <summary>
            Gets the stream which will be sent to the response.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="fragment">The url fragment name (also known as anchor name)</param>
            <param name="hostName">The host name for the URL</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element.</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route..</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element.</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="fragment">The url fragment name (also known as anchor name)</param>
            <param name="hostName">The host name for the URL</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.ActionLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the url to the specified action such that when the action link is clicked, 
            the action is invoked asynchronously via javascript.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element.</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="fragment">The url fragment name (also known as anchor name)</param>
            <param name="hostName">The host name for the URL</param>
            <param name="ajaxHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginForm(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.BeginRouteForm(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block. The form is submitted asynchronously using javascript.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Object,System.Web.Mvc.Ajax.AjaxOptions,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Ajax.AjaxExtensions.RouteLink(System.Web.Mvc.AjaxHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.Ajax.AjaxOptions,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values such that when the link is clicked, 
            a request is made to the virtual path asynchronously via javascript.
            </summary>
            <param name="ajaxHelper"></param>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="hostName">The host name for the URL</param>
            <param name="fragment">The url fragment name (also known as anchor name)</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="ajaxOptions">An object providing options for the asynchronous request</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="T:System.Web.Mvc.Resources.MvcResources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ActionMethodSelector_AmbiguousMatch">
            <summary>
              Looks up a localized string similar to The current request for action &apos;{0}&apos; on controller type &apos;{1}&apos; is ambiguous between the following action methods:{2}.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ActionMethodSelector_AmbiguousMatchType">
            <summary>
              Looks up a localized string similar to {0} on type {1}.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ActionRedirectResult_NoRouteMatched">
            <summary>
              Looks up a localized string similar to No route in the route table matches the supplied values..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.AntiForgeryToken_ValidationFailed">
            <summary>
              Looks up a localized string similar to A required anti-forgery token was not supplied or was invalid..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Common_InvalidEnumValue">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; is outside the valid range of the enumeration type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Common_NullOrEmpty">
            <summary>
              Looks up a localized string similar to Value cannot be null or empty..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Common_PartialViewNotFound">
            <summary>
              Looks up a localized string similar to The partial view &apos;{0}&apos; could not be found. The following locations were searched:{1}.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Common_PropertyCannotBeNullOrEmpty">
            <summary>
              Looks up a localized string similar to The property &apos;{0}&apos; cannot be null or empty..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Common_ValueNotValidForProperty">
            <summary>
              Looks up a localized string similar to The value &apos;{0}&apos; is invalid..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Common_ViewNotFound">
            <summary>
              Looks up a localized string similar to The view &apos;{0}&apos; or its master could not be found. The following locations were searched:{1}.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Controller_UnknownAction">
            <summary>
              Looks up a localized string similar to A public action method &apos;{0}&apos; could not be found on controller &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.Controller_UpdateModel_UpdateUnsuccessful">
            <summary>
              Looks up a localized string similar to The model of type &apos;{0}&apos; was not successfully updated..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ControllerBuilder_ErrorCreatingControllerFactory">
            <summary>
              Looks up a localized string similar to There was an error creating the IControllerFactory &apos;{0}&apos;. Check that it has a public parameterless constructor..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ControllerBuilder_FactoryReturnedNull">
            <summary>
              Looks up a localized string similar to The IControllerFactory &apos;{0}&apos; did not return a controller for a controller named &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ControllerBuilder_MissingIControllerFactory">
            <summary>
              Looks up a localized string similar to The controller factory type &apos;{0}&apos; must implement the IControllerFactory interface..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.DefaultControllerFactory_ControllerNameAmbiguous">
            <summary>
              Looks up a localized string similar to The controller name &apos;{0}&apos; is ambiguous between the following types:{1}.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.DefaultControllerFactory_ErrorCreatingController">
            <summary>
              Looks up a localized string similar to An error occurred while creating a controller of type &apos;{0}&apos;. If the controller doesn&apos;t have a controller factory, ensure that it has a parameterless public constructor..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.DefaultControllerFactory_NoControllerFound">
            <summary>
              Looks up a localized string similar to The controller for path &apos;{0}&apos; could not be found or it does not implement IController..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.DefaultControllerFactory_TypeDoesNotSubclassControllerBase">
            <summary>
              Looks up a localized string similar to The controller type &apos;{0}&apos; must implement IController..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.DefaultModelBinder_ValueRequired">
            <summary>
              Looks up a localized string similar to A value is required..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.DefaultViewLocationCache_NegativeTimeSpan">
            <summary>
              Looks up a localized string similar to The total number of ticks for the TimeSpan must be greater than 0..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ExceptionViewAttribute_NonExceptionType">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not inherit from Exception..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.FilterAttribute_OrderOutOfRange">
            <summary>
              Looks up a localized string similar to Order must be greater than or equal to -1..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.HtmlHelper_MissingSelectData">
            <summary>
              Looks up a localized string similar to There is no ViewData item with the key &apos;{0}&apos; of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.HtmlHelper_TextAreaParameterOutOfRange">
            <summary>
              Looks up a localized string similar to The value must be greater than or equal to zero..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.HtmlHelper_WrongSelectDataType">
            <summary>
              Looks up a localized string similar to The ViewData item with the key &apos;{0}&apos; is of type &apos;{1}&apos; but needs to be of type &apos;{2}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ModelBinderAttribute_ErrorCreatingModelBinder">
            <summary>
              Looks up a localized string similar to There was an error creating the IModelBinder &apos;{0}&apos;. Check that it has a public parameterless constructor..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ModelBinderAttribute_TypeNotIModelBinder">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; does not implement the IModelBinder interface..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ModelBinderDictionary_MultipleAttributes">
            <summary>
              Looks up a localized string similar to The type &apos;{0}&apos; contains multiple attributes inheriting from CustomModelBinderAttribute..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ReflectedActionDescriptor_CannotCallInstanceMethodOnNonControllerType">
            <summary>
              Looks up a localized string similar to Cannot create a descriptor for instance method &apos;{0}&apos; on type &apos;{1}&apos; since the type does not subclass ControllerBase..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ReflectedActionDescriptor_CannotCallMethodsWithOutOrRefParameters">
            <summary>
              Looks up a localized string similar to Cannot call action method &apos;{0}&apos; on controller &apos;{1}&apos; since the parameter &apos;{2}&apos; is passed by reference..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ReflectedActionDescriptor_CannotCallOpenGenericMethods">
            <summary>
              Looks up a localized string similar to Cannot call action method &apos;{0}&apos; on controller &apos;{1}&apos; since it is a generic method..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ReflectedActionDescriptor_ParameterCannotBeNull">
            <summary>
              Looks up a localized string similar to The parameters dictionary contains a null entry for parameter &apos;{0}&apos; of non-nullable type &apos;{1}&apos; for method &apos;{2}&apos; in &apos;{3}&apos;. To make a parameter optional its type should be either a reference type or a Nullable type..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ReflectedActionDescriptor_ParameterNotInDictionary">
            <summary>
              Looks up a localized string similar to The parameters dictionary does not contain an entry for parameter &apos;{0}&apos; of type &apos;{1}&apos; for method &apos;{2}&apos; in &apos;{3}&apos;. The dictionary must contain an entry for each parameter, even parameters with null values..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ReflectedActionDescriptor_ParameterValueHasWrongType">
            <summary>
              Looks up a localized string similar to The parameters dictionary contains an invalid entry for parameter &apos;{0}&apos; for method &apos;{1}&apos; in &apos;{2}&apos;. The dictionary contains a value of type &apos;{3}&apos;, but the parameter requires a value of type &apos;{4}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ReflectedParameterBindingInfo_MultipleConverterAttributes">
            <summary>
              Looks up a localized string similar to The parameter &apos;{0}&apos; on method &apos;{1}&apos; contains multiple attributes inheriting from CustomModelBinderAttribute..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.SessionStateTempDataProvider_SessionStateDisabled">
            <summary>
              Looks up a localized string similar to The SessionStateTempDataProvider requires SessionState to be enabled..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ValueProviderResult_ConversionThrew">
            <summary>
              Looks up a localized string similar to The parameter conversion from type &apos;{0}&apos; to type &apos;{1}&apos; failed. See the inner exception for more information..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ValueProviderResult_NoConverterExists">
            <summary>
              Looks up a localized string similar to The parameter conversion from type &apos;{0}&apos; to type &apos;{1}&apos; failed because no TypeConverter can convert between these types..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ViewDataDictionary_WrongTModelType">
            <summary>
              Looks up a localized string similar to The model item passed into the dictionary is of type &apos;{0}&apos; but this dictionary requires a model item of type &apos;{1}&apos;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ViewMasterPage_RequiresViewPage">
            <summary>
              Looks up a localized string similar to A ViewMasterPage can only be used with content pages that derive from ViewPage or ViewPage&lt;TViewItem&gt;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ViewUserControl_RequiresViewDataProvider">
            <summary>
              Looks up a localized string similar to The ViewUserControl &apos;{0}&apos; cannot find an IViewDataContainer. The ViewUserControl must be inside a ViewPage, ViewMasterPage, or another ViewUserControl..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.ViewUserControl_RequiresViewPage">
            <summary>
              Looks up a localized string similar to A ViewUserControl can only be used inside pages that derive from ViewPage or ViewPage&lt;TViewItem&gt;..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.WebFormViewEngine_UserControlCannotHaveMaster">
            <summary>
              Looks up a localized string similar to A master name cannot be specified when the view is a ViewUserControl..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.WebFormViewEngine_ViewCouldNotBeCreated">
            <summary>
              Looks up a localized string similar to The view found at &apos;{0}&apos; could not be created..
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Resources.MvcResources.WebFormViewEngine_WrongViewBase">
            <summary>
              Looks up a localized string similar to The view at &apos;{0}&apos; must derive from ViewPage, ViewPage&lt;TViewData&gt;, ViewUserControl, or ViewUserControl&lt;TViewData&gt;..
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ViewPage.InitHelpers">
            <summary>
            Instantiates and initializes the Ajax, Html, and Url properties.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ViewPage.RenderView(System.Web.Mvc.ViewContext)">
            <summary>
            Renders the view page to the response.
            </summary>
            <param name="viewContext"></param>
        </member>
        <member name="P:System.Web.Mvc.ViewPage.Ajax">
            <summary>
            Returns an <see cref="T:System.Web.Mvc.AjaxHelper"/> containing methods useful for AJAX scenarios.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewPage.Html">
            <summary>
            Returns an <see cref="T:System.Web.Mvc.HtmlHelper"/> containing methods useful for rendering HTML elements.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewPage.Model">
            <summary>
            Convenience property used to access the Model property of the <see cref="T:System.Web.Mvc.ViewDataDictionary"/>
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Controller.Content(System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ContentResult"/> which renders the supplied content to the response.
            </summary>
            <param name="content">The content to write to the response</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ContentResult"/> which renders the supplied content to the response.
            </summary>
            <param name="content">The content to write to the response</param>
            <param name="contentType">The content type</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.Content(System.String,System.String,System.Text.Encoding)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ContentResult"/> which renders the supplied content to the response.
            </summary>
            <param name="content">The content to write to the response</param>
            <param name="contentType">The content type</param>
            <param name="contentEncoding">The content encoding</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.FileContentResult"/> which writes the fileContents to the Response.
            </summary>
            <param name="fileContents">The binary content to send to the response.</param>
            <param name="contentType">The content type.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.File(System.Byte[],System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.FileContentResult"/> which writes the fileContents to the Response.
            </summary>
            <param name="fileContents">The binary content to send to the response.</param>
            <param name="contentType">The content type.</param>
            <param name="fileDownloadName">If specified, sets the content-disposition header so that a file download dialog appears in the browesr with the specified file name</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.FileStreamResult"/> which writes the fileStream to the Response.
            </summary>
            <param name="fileStream">The stream to send to the response.</param>
            <param name="contentType">The content type</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.File(System.IO.Stream,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.FileStreamResult"/> which writes the fileStream to the Response.
            </summary>
            <param name="fileStream">The stream to send to the response.</param>
            <param name="contentType">The content type</param>
            <param name="fileDownloadName">If specified, sets the content-disposition header so that a file download dialog appears in the browesr with the specified file name</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.File(System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.FilePathResult"/> which writes the file to the Response.
            </summary>
            <param name="fileName">The path to the file to send to the response.</param>
            <param name="contentType">The content type</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.File(System.String,System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.FilePathResult"/> which writes the file to the Response.
            </summary>
            <param name="fileName">The path to the file to send to the response.</param>
            <param name="contentType">The content type</param>
            <param name="fileDownloadName">If specified, sets the content-disposition header so that a file download dialog appears in the browesr with the specified file name</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.HandleUnknownAction(System.String)">
            <summary>
            Method called whenever a request matches this controller, but not an action of this controller.
            </summary>
            <param name="actionName">The name of the attempted action</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.JavaScript(System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.JavaScriptResult"/> which writes a script to the response 
            which is then executed on the client.
            </summary>
            <param name="script">The JavaScript code to run on the client</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.Json(System.Object)">
            <summary>
            Returns a <see cref="!:System.Web.Mvc.JSonResult"/> which serializes the specified object to 
            JSON and writes the JSON to the response.
            </summary>
            <param name="script">The JavaScript code to run on the client</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String)">
            <summary>
            Returns a <see cref="!:System.Web.Mvc.JSonResult"/> which serializes the specified object to 
            JSON and writes the JSON to the response.
            </summary>
            <param name="script">The JavaScript code to run on the client</param>
            <param name="contentType">The content type</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.Json(System.Object,System.String,System.Text.Encoding)">
            <summary>
            Returns a <see cref="!:System.Web.Mvc.JSonResult"/> which serializes the specified object to 
            JSON and writes the JSON to the response.
            </summary>
            <param name="script">The JavaScript code to run on the client</param>
            <param name="contentType">The content type</param>
            <param name="contentEncoding">The content encoding</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.OnActionExecuting(System.Web.Mvc.ActionExecutingContext)">
            <summary>
            Method called before the action method is invoked.
            </summary>
            <param name="filterContext">Contains information about the current request and action</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.OnActionExecuted(System.Web.Mvc.ActionExecutedContext)">
            <summary>
            Method called after the action method is invoked.
            </summary>
            <param name="filterContext">Contains information about the current request and action</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.OnAuthorization(System.Web.Mvc.AuthorizationContext)">
            <summary>
            Method called when authorization occurs.
            </summary>
            <param name="filterContext">Contains information about the current request and action</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.OnException(System.Web.Mvc.ExceptionContext)">
            <summary>
            Method called when an unhandled exception occurs in the action.
            </summary>
            <param name="filterContext">Contains information about the current request and action</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.OnResultExecuted(System.Web.Mvc.ResultExecutedContext)">
            <summary>
            Method called after the action result returned by an action method is executed.
            </summary>
            <param name="filterContext">Contains information about the current request and action result</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.OnResultExecuting(System.Web.Mvc.ResultExecutingContext)">
            <summary>
            Method called before the action result returned by an action method is executed.
            </summary>
            <param name="filterContext">Contains information about the current request and action result</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.PartialView">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.PartialViewResult"/> which renders a partial view to the response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.PartialView(System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.PartialViewResult"/> which renders a partial view to the response.
            </summary>
            <param name="model">The model rendered by the partial view</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.PartialView(System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.PartialViewResult"/> which renders a partial view to the response.
            </summary>
            <param name="name">The name of the partial view</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.PartialView(System.String,System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.PartialViewResult"/> which renders a partial view to the response.
            </summary>
            <param name="name">The name of the partial view</param>
            <param name="model">The model rendered by the partial view</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.Redirect(System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectResult"/> which redirects to the specified URL
            </summary>
            <param name="url">The URL to redirect to.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified action
            </summary>
            <param name="actionName">The name of the action.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified action
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified action
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified action
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified action
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToAction(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified action
            </summary>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified route
            </summary>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified route
            </summary>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified route
            </summary>
            <param name="routeName">The name of the route</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified route
            </summary>
            <param name="routeName">The name of the route</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.RedirectToRoute(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.RedirectToRouteResult"/> which redirects to the specified route
            </summary>
            <param name="routeName">The name of the route</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0)">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String)">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[])">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="includeProperties">List of properties of the model to update</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[])">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[])">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="excludeProperties">List of properties to explicitly exclude from update. These are excluded even if they are listed in the includeProperties list</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String[],System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.TryUpdateModel``1(``0,System.String,System.String[],System.String[],System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            Returns true if successful.
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="excludeProperties">List of properties to explicitly exclude from update. These are excluded even if they are listed in the includeProperties list</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0)">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String)">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[])">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="includeProperties">List of properties of the model to update</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[])">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="includeProperties">List of properties of the model to update</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[])">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="excludeProperties">List of properties to explicitly exclude from update. These are excluded even if they are listed in the includeProperties list</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String[],System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.UpdateModel``1(``0,System.String,System.String[],System.String[],System.Collections.Generic.IDictionary{System.String,System.Web.Mvc.ValueProviderResult})">
            <summary>
            Updates the specified model instance using values from the Controller's current ValueProvider. 
            </summary>
            <typeparam name="TModel">The type of the model object</typeparam>
            <param name="model">The model instance to update.</param>
            <param name="prefix">Prefix to use when looking up values in the value provider</param>
            <param name="includeProperties">List of properties of the model to update</param>
            <param name="excludeProperties">List of properties to explicitly exclude from update. These are excluded even if they are listed in the includeProperties list</param>
            <param name="valueProvider">A dictionary of values used to update the model</param>
        </member>
        <member name="M:System.Web.Mvc.Controller.View">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ViewResult"/> which renders a view to the response.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.View(System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ViewResult"/> which renders a view to the response.
            </summary>
            <param name="model">The model rendered by the view</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.View(System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ViewResult"/> which renders a view to the response.
            </summary>
            <param name="viewName">The name of the partial view</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.View(System.String,System.String)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ViewResult"/> which renders a view to the response.
            </summary>
            <param name="viewName">The name of the view</param>
            <param name="masterName">The name of the master view</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.View(System.String,System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ViewResult"/> which renders a view to the response.
            </summary>
            <param name="viewName">The name of the view</param>
            <param name="model">The model rendered by the view</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.View(System.String,System.String,System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ViewResult"/> which renders a view to the response.
            </summary>
            <param name="viewName">The name of the view</param>
            <param name="masterName">The name of the master view</param>
            <param name="model">The model rendered by the view</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ViewResult"/> which renders the specified <see cref="T:System.Web.Mvc.IView"/> to the response.
            </summary>
            <param name="view">The view rendered to the response</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Controller.View(System.Web.Mvc.IView,System.Object)">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ViewResult"/> which renders the specified <see cref="T:System.Web.Mvc.IView"/> to the response.
            </summary>
            <param name="view">The view rendered to the response</param>
            <param name="model">The model rendered by the view</param>
            <returns></returns>
        </member>
        <member name="P:System.Web.Mvc.Controller.ActionInvoker">
            <summary>
            Gets the <see cref="T:System.Web.Mvc.IActionInvoker"/> for the controller.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.HttpContext">
            <summary>
            Encapsulates all HTTP-specific information about an individual HTTP request.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.ModelState">
            <summary>
            Gets the <see cref="T:System.Web.Mvc.ModelStateDictionary"/> object containing the 
            state of the model and model binding validation.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.Request">
            <summary>
            Gets the <see cref="T:System.Web.HttpRequestBase"/> object for the current HTTP request.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.Response">
            <summary>
            Gets the <see cref="T:System.Web.HttpResponseBase"/> object for the current HTTP request.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.RouteData">
            <summary>
            Returns the <see cref="!:System.Web.RouteData"/> for the current request.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.Server">
            <summary>
            Gets the <see cref="T:System.Web.HttpServerUtilityBase"/> object that provides methods used in processing Web requests.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.Session">
            <summary>
            Gets the <see cref="T:System.Web.HttpSessionStateBase"/> object for the current HTTP request.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.TempDataProvider">
            <summary>
            Gets the <see cref="T:System.Web.Mvc.ITempDataProvider"/> object used to store data for the next request.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.Url">
            <summary>
            Gets the <see cref="T:System.Web.Mvc.UrlHelper"/> object used to generate URLs using Routing.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.Controller.User">
            <summary>
            Gets the security information for the current HTTP request.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.AjaxHelper">
            <summary>
            Class containing convenience methods for use in rendering HTML for use in Ajax scenarios within a view.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.AjaxHelper.RouteCollection">
            <summary>
            Gets the collection of routes.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.AjaxHelper.ViewContext">
            <summary>
            Gets the current <see cref="T:System.Web.Mvc.ViewContext"/>.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.AjaxHelper.ViewData">
            <summary>
            Gets the current <see cref="!:System.Web.Mvc.ViewData"/>.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.AjaxHelper.ViewDataContainer">
            <summary>
            Gets the current <see cref="!:System.Web.Mvc.ViewDataContainer"/>.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ViewContext">
            <summary>
            Encapsulates information related to rendering a view.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ControllerContext">
            <summary>
            Encapsulates information about an HTTP request that matches a defined <see cref="!:System.Web.RouteBase">Route</see> and <see cref="T:System.Web.Mvc.ControllerBase">Controller</see>. 
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewContext.TempData">
            <summary>
            Gets data associated with this request which only lives for one request.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewContext.View">
            <summary>
            Gets the <see cref="T:System.Web.Mvc.IView"/> to render.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ViewContext.ViewData">
            <summary>
            Gets the view data supplied to the view.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Returns an anchor tag containing the virtual path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns an anchor tag containing the virtual path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the virtual path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String)">
            <summary>
            Returns an anchor tag containing the virtual path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the virtual path to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor tag containing the url to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="fragment">The url fragment name (also known as anchor name)</param>
            <param name="hostName">The host name for the URL</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.ActionLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the url to the specified action.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="fragment">The url fragment name (also known as anchor name)</param>
            <param name="hostName">The host name for the URL</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the virtual path for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Object,System.Object)">
            <summary>
            Returns an anchor tag containing the url for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="hostName">The host name for the URL</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="fragment">The url fragment name (also known as anchor name)</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.LinkExtensions.RouteLink(System.Web.Mvc.HtmlHelper,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an anchor tag containing the url for the specified route values.
            </summary>
            <param name="linkText">The inner text of the anchor tag</param>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="hostName">The host name for the URL</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="fragment">The url fragment name (also known as anchor name)</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An anchor tag</returns>
        </member>
        <member name="T:System.Web.Mvc.ModelStateDictionary">
            <summary>
            Represents the state of an attempt to bind a posted form to an action method including validation information.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.ModelStateDictionary"/> class
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ModelStateDictionary.#ctor(System.Web.Mvc.ModelStateDictionary)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.ModelStateDictionary"/> class with the values copied 
            from the the specified ModelStateDictionary.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.Exception)">
            <summary>
            Adds the specified <see cref="T:System.Exception"/> to the errors collection for the <see cref="T:System.Web.Mvc.ModelState"/> 
            associated with the specified key.
            </summary>
            <param name="key"></param>
            <param name="exception"></param>
        </member>
        <member name="M:System.Web.Mvc.ModelStateDictionary.AddModelError(System.String,System.String)">
            <summary>
            Adds the specified error message to the errors collection for the <see cref="T:System.Web.Mvc.ModelState"/> 
            associated with the specified key.
            </summary>
            <param name="key"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:System.Web.Mvc.ModelStateDictionary.IsValidField(System.String)">
            <summary>
            Returns true if there are any <see cref="T:System.Web.Mvc.ModelError"/> associated or prefixed with the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.ModelStateDictionary.Merge(System.Web.Mvc.ModelStateDictionary)">
            <summary>
            Copies the values from the specified <see cref="T:System.Web.Mvc.ModelStateDictionary"/> into this 
            dictionary, overwriting existing values in cases where the keys are the same.
            </summary>
            <param name="dictionary"></param>
        </member>
        <member name="M:System.Web.Mvc.ModelStateDictionary.SetModelValue(System.String,System.Web.Mvc.ValueProviderResult)">
            <summary>
            Sets the value for the specified key using the specified <see cref="T:System.Web.Mvc.ValueProviderResult"/>
            </summary>
            <param name="key"></param>
            <param name="value"></param>
        </member>
        <member name="P:System.Web.Mvc.ModelStateDictionary.Count">
            <summary>
            Gets the number of key/value pairs that are in the collection.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ModelStateDictionary.IsValid">
            <summary>
            Returns true if there are no errors, otherwise false.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ModelStateDictionary.Keys">
            <summary>
            Gets a collection that contains the keys in the dictionary.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ModelStateDictionary.Item(System.String)">
            <summary>
            Gets or sets the value that is associated with the specified key.
            </summary>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.Mvc.ModelStateDictionary.Values">
            <summary>
            Gets a collection that contains the <see cref="T:System.Web.Mvc.ModelState"/> values in the dictionary.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.UrlHelper"/> class.
            </summary>
            <param name="requestContext">An object that contains information about the current request and the defined route it matched.</param>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.#ctor(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.UrlHelper"/> class.
            </summary>
            <param name="requestContext">An object that contains information about the current request and the defined route it matched.</param>
            <param name="routeCollection">A collection of <see cref="N:System.Web.Routing">Route</see> instances.</param>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Action(System.String)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="actionName">The name of the action</param>
            <returns>The virtual path to the action</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Object)">
            <summary>
            Returns a virtual path URL for the specified route values.
            </summary>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>The virtual path to the action</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="actionName">The name of the action</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <returns>The virtual path to the action</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <returns>The virtual path to the action</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>The virtual path to the action</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <returns>The virtual path to the action</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Object,System.String)">
            <summary>
            Returns a fully qualified URL for the specified route values.
            </summary>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <returns>The URL to the action</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Action(System.String,System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
            <summary>
            Returns a fully qualified URL for the specified route values.
            </summary>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="hostName">The host name for the URL</param>
            <returns>The URL to the action</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Content(System.String)">
            <summary>
            Converts a virtual path to an application absolute path.
            </summary>
            <remarks>
            If the specified <paramref name="contentPath"/> does not start with the tilde [~] character, 
            then this method returns the specified <paramref name="contentPath"/> unchanged.
            </remarks>
            <param name="contentPath">The virtual path to the content.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.Encode(System.String)">
            <summary>
            Encodes a URL string
            </summary>
            <param name="url">The text to encode</param>
            <returns>An encoded string</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Object)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>A virtual path</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <returns>A virtual path</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <returns>A virtual path</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>A virtual path</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Returns a virtual path for the specified route values.
            </summary>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route.</param>
            <returns>A virtual path</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Object,System.String)">
            <summary>
            Returns a fully qualified URL for the specified route values.
            </summary>
            <param name="routeName">The name of the route used to return a virtual path.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <returns>A virtual path</returns>
        </member>
        <member name="M:System.Web.Mvc.UrlHelper.RouteUrl(System.String,System.Web.Routing.RouteValueDictionary,System.String,System.String)">
            <summary>
            Returns a fully qualified URL for the specified route values.
            </summary>
            <param name="routeName">The name of the route used to generate the virtual path</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="protocol">The protocol for the URL such as "http" or "https"</param>
            <param name="hostName">The host name for the URL</param>
            <returns>The virtual path to the action</returns>
        </member>
        <member name="P:System.Web.Mvc.UrlHelper.RequestContext">
            <summary>
            Encapsulates information about an HTTP request that matches a defined route.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.UrlHelper.RouteCollection">
            <summary>
            A collection containing the routes registered for the application.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.HtmlHelper">
            <summary>
            Class containing convenience methods for use in rendering HTML in a view.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken">
            <summary>
            Returns the string for a hidden input containing a token used to prevent CSRF attacks.
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.AntiForgeryToken(System.String)">
            <summary>
            Returns the string for a hidden input containing a token used to prevent CSRF attacks.
            </summary>
            <param name="salt">A salt to use when generating the token</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.String)">
            <summary>
            Method used to encode HTML attribute values.
            </summary>
            <param name="value">The string to encode</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.AttributeEncode(System.Object)">
            <summary>
            Method used to encode HTML attribute values.
            </summary>
            <param name="value">The object to encode</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.String)">
            <summary>
            Method used to encode HTML.
            </summary>
            <param name="value">The string to encode</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.Encode(System.Object)">
            <summary>
            Method used to encode HTML.
            </summary>
            <param name="value">The object to encode</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Convenience method used to generate a link using Routing to determine the virtual path.
            </summary>
            <param name="requestContext">The current <see cref="!:System.Web.RequestContext"/></param>
            <param name="routeCollection">The collection of routes.</param>
            <param name="linkText">The text displayed in the link</param>
            <param name="routeName">The name of the route, if any.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The route values</param>
            <param name="htmlAttributes">The html attributes</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.GenerateLink(System.Web.Routing.RequestContext,System.Web.Routing.RouteCollection,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Convenience method used to generate a link using Routing to determine the URL.
            </summary>
            <param name="requestContext">The current <see cref="!:System.Web.RequestContext"/></param>
            <param name="routeCollection">The collection of routes.</param>
            <param name="linkText">The text displayed in the link</param>
            <param name="routeName">The name of the route, if any.</param>
            <param name="actionName">The name of the action.</param>
            <param name="controllerName">The name of the controller.</param>
            <param name="routeValues">The route values</param>
            <param name="htmlAttributes">The html attributes</param>
            <param name="protocol">The protocol to use, such as http or https.</param>
            <param name="hostName">The hostname for the URL</param>
            <param name="fragment">The fragment to append to the end of the URL</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.GetFormMethodString(System.Web.Mvc.FormMethod)">
            <summary>
            Convenience method which converts the <see cref="T:System.Web.Mvc.FormMethod"/> value into a string.
            </summary>
            <param name="method"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.HtmlHelper.GetInputTypeString(System.Web.Mvc.InputType)">
            <summary>
            Convenience method for converting the <see cref="T:System.Web.Mvc.InputType"/> value to a string
            </summary>
            <param name="inputType"></param>
            <returns></returns>
        </member>
        <member name="P:System.Web.Mvc.HtmlHelper.IdAttributeDotReplacement">
            <summary>
            Gets or sets the string which replaces the dot character in the ID of html elements generated by HTML helpers.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.HtmlHelper.RouteCollection">
            <summary>
            Gets the collection of routes.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.HtmlHelper.ViewContext">
            <summary>
            Gets the current <see cref="T:System.Web.Mvc.ViewContext"/>.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.HtmlHelper.ViewData">
            <summary>
            Gets the current <see cref="!:System.Web.Mvc.ViewData"/>.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.HtmlHelper.ViewDataContainer">
            <summary>
            Gets the current <see cref="!:System.Web.Mvc.ViewDataContainer"/>.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ModelErrorCollection">
            <summary>
            A collection of <see cref="T:System.Web.Mvc.ModelError"/> instances.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.Exception)">
            <summary>
            Adds an <see cref="T:System.Exception"/> to the <see cref="T:System.Web.Mvc.ModelErrorCollection"/>
            </summary>
            <param name="exception"></param>
        </member>
        <member name="M:System.Web.Mvc.ModelErrorCollection.Add(System.String)">
            <summary>
            Adds an error message to the <see cref="T:System.Web.Mvc.ModelErrorCollection"/>
            </summary>
            <param name="errorMessage"></param>
        </member>
        <member name="T:System.Web.Mvc.AcceptVerbsAttribute">
            <summary>
            When applied to an action method, specifies which HTTP verbs the method will respond to.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.AcceptVerbsAttribute.Verbs">
            <summary>
            Gets the list of HTTP verbs the action method will respond to.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ModelError">
            <summary>
            Represents an error that occured while attempting to bind a request to the arguments of an action method.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.ModelError"/> class with the specified exception.
            </summary>
            <remarks>
            For security reasons, the exception's ErrorMessage property is not set to the 
            Exception's Message property by default.
            </remarks>
            <param name="exception"></param>
        </member>
        <member name="M:System.Web.Mvc.ModelError.#ctor(System.Exception,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.ModelError"/> class with the specified exception and error message.
            </summary>
            <param name="exception"></param>
            <param name="errorMessage"></param>
        </member>
        <member name="M:System.Web.Mvc.ModelError.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.ModelError"/> class with the specified error message.
            </summary>
            <param name="errorMessage"></param>
        </member>
        <member name="P:System.Web.Mvc.ModelError.Exception">
            <summary>
            The <see cref="T:System.Exception"/>, if any, that occurred while binding to the model.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ModelError.ErrorMessage">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ValueProviderResult">
            <summary>
            Represents the result of an attempt to bind a supplied value (from a form post, query string, etc...) to 
            a property of an argument to an action method or to the argument itself.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.ValueProviderResult.#ctor(System.Object,System.String,System.Globalization.CultureInfo)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.ValueProviderResult"/> class with the specified 
            raw value, attempted value, and <see cref="T:System.Globalization.CultureInfo"/>.
            </summary>
            <param name="rawValue"></param>
            <param name="attemptedValue"></param>
            <param name="culture"></param>
        </member>
        <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type)">
            <summary>
            Converts the value encapsulated by this result to the specified type.
            </summary>
            <param name="type">The target type</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.ValueProviderResult.ConvertTo(System.Type,System.Globalization.CultureInfo)">
            <summary>
            Converts the value encapsulated by this result to the specified type.
            </summary>
            <param name="type">The target type</param>
            <param name="culture">The culture to use in the conversion.</param>
            <returns></returns>
        </member>
        <member name="P:System.Web.Mvc.ValueProviderResult.AttemptedValue">
            <summary>
            The RawValue converted to a string for display purposes.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ValueProviderResult.RawValue">
            <summary>
            The raw value supplied by the value provider.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.FileContentResult">
            <summary>
            Sends binary content to the response.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.FileContentResult.#ctor(System.Byte[],System.String)">
            <summary>
            Initializes a new instance of <see cref="T:System.Web.Mvc.FileContentResult"/> with the specified file contents and content type.
            </summary>
            <param name="fileContents">The byte array to send to the response</param>
            <param name="contentType">The content type to use for the response</param>
        </member>
        <member name="P:System.Web.Mvc.FileContentResult.FileContents">
            <summary>
            The binary content to send to the response.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.TagBuilder">
            <summary>
            Class used by the Html helpers to build HTML tags.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.ModelState">
            <summary>
            Encapsulates the state of model binding to a property of an argument, or the argument itself, of an action method.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ModelState.Value">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ValueProviderResult"/> which encapsulates the value which was attempted to be bound by model binding.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.ModelState.Errors">
            <summary>
            Returns a <see cref="T:System.Web.Mvc.ModelErrorCollection"/> containing any errors that occurred during model binding.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Returns a textarea tag suitable for entering multiline input.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <returns>An textarea tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Returns a textarea tag suitable for entering multiline input.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An textarea tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a textarea tag suitable for entering multiline input.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An textarea tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Returns a textarea tag suitable for entering multiline input.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <returns>An textarea tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Returns a textarea tag suitable for entering multiline input.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An textarea tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a textarea tag suitable for entering multiline input.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An textarea tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Object)">
            <summary>
            Returns a textarea tag suitable for entering multiline input.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="columns">The number of columns</param>
            <param name="rows">The number of rows</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An textarea tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.TextAreaExtensions.TextArea(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Int32,System.Int32,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a textarea tag suitable for entering multiline input.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="columns">The number of columns</param>
            <param name="rows">The number of rows</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An textarea tag</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="actionName">The name of the action</param>
            <param name="controllerName">The name of the controller</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Web.Mvc.FormMethod,System.Object)">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route. The parameters are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax.</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.String,System.Web.Routing.RouteValueDictionary,System.Web.Mvc.FormMethod,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Writes a begin form tag to the response while returning an <see cref="!:System.Web.Mvc.MvcForm"/> 
            instance. Can be used in a using block in which case it renders the end form tag at the end of the 
            using block.
            </summary>
            <param name="htmlHelper"></param>
            <param name="routeName">The name of the route to used to obtain the form post url.</param>
            <param name="routeValues">An object containing the parameters for a route</param>
            <param name="method">The HTTP method for the form post, either Get or Post</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An <see cref="!:System.Web.Mvc.MvcForm"/> instance.</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.FormExtensions.EndForm(System.Web.Mvc.HtmlHelper)">
            <summary>
            Renders the end form tag to the response. This provides an alternative way to end the form 
            to using a using block with <see cref="M:System.Web.Mvc.Html.FormExtensions.BeginForm(System.Web.Mvc.HtmlHelper)"/> and <see cref="M:System.Web.Mvc.Html.FormExtensions.BeginRouteForm(System.Web.Mvc.HtmlHelper,System.Object)"/>.
            </summary>
            <param name="htmlHelper"></param>
        </member>
        <member name="T:System.Web.Mvc.FilePathResult">
            <summary>
            Sends the contents of a file to the response.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.FilePathResult.#ctor(System.String,System.String)">
            <summary>
            Initializes an instance of <see cref="T:System.Web.Mvc.FilePathResult"/> with the specified file name and content type.
            </summary>
            <param name="fileName">The name of the file to send to the response.</param>
            <param name="contentType">The content type of the response.</param>
        </member>
        <member name="P:System.Web.Mvc.FilePathResult.FileName">
            <summary>
            The path to the file which is sent to the response.
            </summary>
        </member>
        <member name="T:System.Web.Mvc.EmptyResult">
            <summary>
            Represents a result that doesn't do anything, like a controller action returning null.
            </summary>
            <remarks>
            <para>This follows a pattern known as the Null Object pattern</para>
            </remarks>
        </member>
        <member name="T:System.Web.Mvc.ITempDataProvider">
            <summary>
            Defines the contract for temp data providers which store data viewed on the next request.
            </summary>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Displays a validation message if the specified field contains an error in the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="modelName">The name of the property or model object being validated</param>
            <returns>An empty string if valid, otherwise a span with an error message</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Displays a validation message if the specified field contains an error in the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="modelName">The name of the property or model object being validated</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An empty string if valid, otherwise a span with an error message</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Displays a validation message if the specified field contains an error in the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="modelName">The name of the property or model object being validated</param>
            <param name="validationMessage">The message to display if the specified field is in error</param>
            <returns>An empty string if valid, otherwise a span with an error message</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Object)">
            <summary>
            Displays a validation message if the specified field contains an error in the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="modelName">The name of the property or model object being validated</param>
            <param name="validationMessage">The message to display if the specified field is in error</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An empty string if valid, otherwise a span with an error message</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Displays a validation message if the specified field contains an error in the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="modelName">The name of the property or model object being validated</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An empty string if valid, otherwise a span with an error message</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationMessage(System.Web.Mvc.HtmlHelper,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Displays a validation message if the specified field contains an error in the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="modelName">The name of the property or model object being validated</param>
            <param name="validationMessage">The message to display if the specified field is in error</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An empty string if valid, otherwise a span with an error message</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper)">
            <summary>
            Returns an unordered list [ul] of validation messages within the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Object)">
            <summary>
            Returns an unordered list [ul] of validation messages within the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.ValidationExtensions.ValidationSummary(System.Web.Mvc.HtmlHelper,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns an unordered list [ul] of validation messages within the <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>.
            </summary>
            <param name="htmlHelper"></param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.String)">
            <summary>
            Returns a select tag used to select a single option from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="optionLabel">Provides the text for a default empty valued option, if it is not null.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String)">
            <summary>
            Returns a select tag used to select a single option from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <param name="optionLabel">Provides the text for a default empty valued option, if it is not null.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Object)">
            <summary>
            Returns a select tag used to select a single option from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <param name="optionLabel">Provides the text for a default empty valued option, if it is not null.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Returns a select tag used to select a single option from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
            <summary>
            Returns a select tag used to select a single option from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
            <summary>
            Returns a select tag used to select a single option from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a select tag used to select a single option from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.DropDownList(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a select tag used to select a single option from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <param name="optionLabel">Provides the text for a default empty valued option, if it is not null.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Returns a select tag used to select a multiple options from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem})">
            <summary>
            Returns a select tag used to select a multiple options from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Object)">
            <summary>
            Returns a select tag used to select a multiple options from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.SelectExtensions.ListBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IEnumerable{System.Web.Mvc.SelectListItem},System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a select tag used to select a multiple options from a set of possible choices.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The name of the form field and used as a key to lookup possible options. If ViewData[name] implements IEnumerable of <see cref="T:System.Web.Mvc.SelectListItem"/>.</param>
            <param name="selectList">The enumeration of SelectListItem instances used to populate the drop down.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns></returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Returns the input tag for a checkbox.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name</param>
            <returns>An input tag with the type set to "checkbox"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean)">
            <summary>
            Returns the input tag for a checkbox.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name</param>
            <param name="isChecked">A boolean indicating whether or not the checkbox is checked</param>
            <returns>An input tag with the type set to "checkbox"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Object)">
            <summary>
            Returns the input tag for a checkbox.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name</param>
            <param name="isChecked">A boolean indicating whether or not the checkbox is checked</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An input tag with the type set to "checkbox"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Returns the input tag for a checkbox.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An input tag with the type set to "checkbox"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns the input tag for a checkbox.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An input tag with the type set to "checkbox"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.CheckBox(System.Web.Mvc.HtmlHelper,System.String,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns the input tag for a checkbox.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name</param>
            <param name="isChecked">A boolean indicating whether or not the checkbox is checked</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An input tag with the type set to "checkbox"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Returns a hidden input tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <returns>An input tag with the type set to "hidden"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Returns a hidden input tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the hidden input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <returns>An input tag with the type set to "hidden"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            Returns a hidden input tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the hidden input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An input tag with the type set to "hidden"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.Hidden(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a hidden input tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the hidden input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An input tag with the type set to "hidden"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Returns a password tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <returns>An input tag with the type set to "password"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Returns a password tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <returns>An input tag with the type set to "password"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            Returns a password tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An input tag with the type set to "password"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.Password(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a password tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An input tag with the type set to "password"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Returns a radio button tag used to present one possible value, out of a range, for a form field specified by the name.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the current value.</param>
            <param name="value">If checked, the value of the radio button submitted when the form is posted. If the value in <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> or <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see> matches this value, the radio button is checked.</param>
            <returns>An input tag with the type set to "radio"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            Returns a radio button tag used to present one possible value, out of a range, for a form field specified by the name.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the current value.</param>
            <param name="value">If checked, the value of the radio button submitted when the form is posted. If the value in <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> or <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see> matches this value, the radio button is checked.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An input tag with the type set to "radio"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a radio button tag used to present one possible value, out of a range, for a form field specified by the name.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the current value.</param>
            <param name="value">If checked, the value of the radio button submitted when the form is posted. If the value in <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> or <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see> matches this value, the radio button is checked.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An input tag with the type set to "radio"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean)">
            <summary>
            Returns a radio button tag used to present one possible value, out of a range, for a form field specified by the name.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the current value.</param>
            <param name="value">If checked, the value of the radio button submitted when the form is posted. If the value in <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> or <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see> matches this value, the radio button is checked.</param>
            <param name="isChecked">Whether or not the radio button is checked</param>
            <returns>An input tag with the type set to "radio"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Object)">
            <summary>
            Returns a radio button tag used to present one possible value, out of a range, for a form field specified by the name.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the current value.</param>
            <param name="value">If checked, the value of the radio button submitted when the form is posted. If the value in <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> or <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see> matches this value, the radio button is checked.</param>
            <param name="isChecked">Whether or not the radio button is checked</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An input tag with the type set to "radio"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.RadioButton(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Boolean,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a radio button tag used to present one possible value, out of a range, for a form field specified by the name.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the current value.</param>
            <param name="value">If checked, the value of the radio button submitted when the form is posted. If the value in <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> or <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see> matches this value, the radio button is checked.</param>
            <param name="isChecked">Whether or not the radio button is checked</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An input tag with the type set to "radio"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String)">
            <summary>
            Returns a text input tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <returns>An input tag with the type set to "text"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object)">
            <summary>
            Returns a text input tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <returns>An input tag with the type set to "text"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Object)">
            <summary>
            Returns a text input tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element. The attributes are retrieved via reflection by examining the properties of the object. Typically created using object initializer syntax</param>
            <returns>An input tag with the type set to "text"</returns>
        </member>
        <member name="M:System.Web.Mvc.Html.InputExtensions.TextBox(System.Web.Mvc.HtmlHelper,System.String,System.Object,System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
            Returns a text input tag.
            </summary>
            <param name="htmlHelper"></param>
            <param name="name">The form field name and <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> key used to lookup the value.</param>
            <param name="value">The value of the input. If null, looks at the <see cref="T:System.Web.Mvc.ViewDataDictionary">ViewData</see> and then <see cref="T:System.Web.Mvc.ModelStateDictionary">ModelState</see>for the value.</param>
            <param name="htmlAttributes">An object containing the html attributes for the element</param>
            <returns>An input tag with the type set to "text"</returns>
        </member>
        <member name="M:System.Web.Mvc.DefaultValueProviderDictionary.#ctor(System.Web.Mvc.ControllerContext)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Web.Mvc.DefaultValueProviderDictionary"/>
            with the specified <see cref="T:System.Web.Mvc.ControllerContext"/>.
            </summary>
            <param name="controllerContext"></param>
        </member>
        <member name="T:System.Web.Mvc.BindAttribute">
            <summary>
            Attribute used to provide details on how model binding to a parameter should occur.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.BindAttribute.Exclude">
            <summary>
            A comma delimited black list of property names for which binding is not allowed.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.BindAttribute.Include">
            <summary>
            A comma delimited white list of property names for which binding is allowed.
            </summary>
        </member>
        <member name="P:System.Web.Mvc.BindAttribute.Prefix">
            <summary>
            Gets or sets the prefix to use when binding to an action argument or model property.
            </summary>
        </member>
    </members>
</doc>
