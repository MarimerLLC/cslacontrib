<%@ CodeTemplate Src="TemplateBase.vb" Inherits="CodeSmith.Csla.TemplateBase" Language="VB" TargetLanguage="VB" Description="Generates a CSLA Editable Child Collection Object." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="ObjectName" Type="System.String" Optional="true" Category="1. Object" Description="Required - The Name of the Business Object Class to Generate." %>
<%@ Property Name="ParentName" Type="System.String" Optional="true" Default="" Category="1. Object" Description="The Name of parent Business object belongs." %>
<%@ Property Name="RootCommand" Type="CommandSchema" Optional="true" Category="2. Data Source" Description="Required - The stored procedure that the object is based on. Must select RootTable,  RootView, or RootCommand." %>
<%@ Property Name="RootTable" Type="TableSchema" Optional="true" Category="2. Data Source" Description="Required - The Root Table that the object is based on. Must select RootTable,  RootView, or RootCommand." %>
<%@ Property Name="RootView" Type="ViewSchema" Optional="true" Category="2. Data Source" Description="Required - The Root View that the object is based on. Must select RootTable,  RootView, or RootCommand." %>
<%@ Property Name="ResultSetIndex" Type="System.Int32" Default="1" Optional="true" Category="2. Data Source" Description="Result set index indicates which result set to use from the stored procedure. Required when using RootCommand." %>
<%@ Property Name="UniqueColumnNames" Type="CodeSmith.CustomProperties.StringCollection" Optional="true" Category="2. Data Source" Description="Unique columns. Required when using RootView or when ResultSetIndex > 0." %>
<%@ Property Name="ChildCollectionNames" Type="CodeSmith.CustomProperties.StringCollection" Optional="true" Category="1a. Child Collection Object" Description="The Child Collection's Name. Used for the memeber variable and collection name." %>
<%@ Property Name="ChildPropertyNames" Type="CodeSmith.CustomProperties.StringCollection" Optional="true" Category="1a. Child Collection Object" Description="The Child Collection's member variable name." %>
<%-- Generic Variables for code to use  --%>
<%  Dim i As Integer = BaseIndentLevel
    Dim objInfo As ObjectInfo = New ObjectInfo(Me) %>
<!-- #INCLUDE FILE="AutoGenWarning.inc" -->
<%=Indent(0, True)%>Imports System
<%=Indent(0)%>Imports System.Data
<%=Indent(0)%>Imports System.Data.SqlClient
<%=Indent(0)%>Imports Csla
<%=Indent(0)%>Imports Csla.Data
<%=Indent(0)%>Imports Csla.Validation
<% If Not ClassNamespace Is Nothing AndAlso ClassNamespace.Length > 0 Then %>
<%=Indent(0, True)%>Namespace <%= ClassNamespace %>
<% i+=1 %>
<% End If %> 
<% If Not objInfo.IsUserPartial Then %>
<%=Indent(i, True)%><Serializable()> _ 
<%=Indent(i)%><%= objInfo.Modifiers %> Class <%=objInfo.NameAndSuffix%>
<% Else %>
<%=Indent(i, True)%><%= objInfo.Modifiers %> Class <%=objInfo.NameAndSuffix%>
<% End If %>
<% i+=1 %>
<%=Indent(i)%>Inherits <%=objInfo.Inherits%>
<!-- #INCLUDE FILE="Initialize.inc" -->
<!-- #INCLUDE FILE="PropertiesMethods.inc" -->
<!-- #INCLUDE FILE="ValidationRules.inc" -->
<!-- #INCLUDE FILE="AuthorizationRules.inc" -->
<!-- #INCLUDE FILE="ChildFactoryMethods.inc" -->
<%=Indent(0, True)%>#Region " Data Access "
<% If objInfo.IsGeneratedBase Then%>
<%=Indent(i, True)%><RunLocal> _
<%=Indent(i)%>Protected Overrides Sub DataPortal_Create(ByVal criteria As Object) 
<%=Indent(i+1)%>MarkAsChild()
<%=Indent(i)%>End Sub
<% If Not (objInfo.HasIdentity OrElse objInfo.HasObjectGeneratedKey) Then %>
<!-- #INCLUDE FILE="ObjectCriteria.inc" -->
<!-- #INCLUDE FILE="DataPortalCreate.inc" -->
<% End If %>
<% End If %>
<% If objInfo.IsGeneratedClass Then %>
<!-- #INCLUDE FILE="Fetch.inc" -->
<!-- #INCLUDE FILE="Update.inc" -->
<!-- #INCLUDE FILE="Delete.inc" -->
<% End If %>
<% If objInfo.IsUserBase Then %>
<%=Indent(i, True)%>'TODO: If parent use identity key, 
<%=Indent(i)%>'override AddInsertParameters and fix fk member with value from parent
<% end If %>
<%=Indent(0, True)%>#End Region ' Data Access
<!-- #INCLUDE FILE="DelegationMethods.inc" -->
<% i-=1 %>
<%=Indent(i, True)%>End Class
<% If Not ClassNamespace Is Nothing AndAlso ClassNamespace.Length > 0 Then%>
<%=Indent(0, True)%>End Namespace <% End If%>