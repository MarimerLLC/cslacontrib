<%@ CodeTemplate Src="TemplateBase.vb" Inherits="CodeSmith.Csla.TemplateBase" Language="VB" TargetLanguage="VB" Description="Generates Store Procedures for a Object." %>
<%@ Assembly Name="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Property Name="ObjectName" Type="System.String" Optional="true" Category="1. Object" Description="Required - The Name of the Business Object Collection Class to Generate." %>
<%@ Property Name="ChildName" Type="System.String" Optional="true" Category="1. Object" Description="Optional - The Name of the Business Object Element of the Collection." %>
<%@ Property Name="ObjectType" Type="ObjectType" Optional="true" Category="1. Object" Description="Required - The Object Type of the Business Object." %>
<%@ Property Name="GrantExecute" Default="public" Type="System.String" Optional="true" Category="5. Store Procedure" Description="Optional - The user or roles that gets granted execure permissions." %>
<%@ Property Name="RootCommand" Type="CommandSchema" Optional="true" Category="2. Data Source" Description="Required - The stored procedure that the object is based on. Must select RootTable,  RootView, or RootCommand." %>
<%@ Property Name="RootTable" Type="TableSchema" Optional="true" Category="2. Data Source" Description="Required - The Root Table that the object is based on. Must select RootTable,  RootView, or RootCommand." %>
<%@ Property Name="RootView" Type="ViewSchema" Optional="true" Category="2. Data Source" Description="Required - The Root View that the object is based on. Must select RootTable,  RootView, or RootCommand." %>
<%@ Property Name="ResultSetIndex" Type="System.Int32" Default="1" Optional="true" Category="2. Data Source" Description="Result set index indicates which result set to use from the stored procedure. Required when using RootCommand." %>
<% Dim objInfo As ObjectInfo = New ObjectInfo(Me)%>
<% If objInfo.IsCollection Then%>
IF EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND name = '<%=objInfo.FetchCommandText%>')

	BEGIN
		PRINT 'Dropping Procedure <%=objInfo.FetchCommandText%>'
		DROP  Procedure  <%=objInfo.DbOwner%>[<%=objInfo.FetchCommandText%>]
	END

GO

PRINT 'Creating Procedure <%=objInfo.FetchCommandText%>'
GO

CREATE Procedure <%=objInfo.DbOwner%>[<%=objInfo.FetchCommandText%>]
AS
/******************************************************************************
**      Name: <%=objInfo.FetchCommandText%>
**      Desc: Gets a list all <%=ChildName%>
** 
**      Called by: <%=objInfo.NameAndSuffix%>
**
**      Generated by CSLA 2.0 CodeSmith Template Collection
**      Date:   <%=Now.ToString("MM/dd/yyyy")%>
*******************************************************************************
**      Change History
*******************************************************************************
**      Date:       Author:         Description:
**      --------    --------        -------------------------------------------
**		
*******************************************************************************/
SET NOCOUNT ON

SELECT
	<% For i AS Int32 = 0 To objInfo.Properties.Count - 1 %>
	[<%=objInfo.Properties.Item(i).DbColumnName%>]<% If i < (objInfo.Properties.Count - 1) Then %>,<% End If %>
	<% Next %>
FROM <%=objInfo.DbOwner%>[<%=objInfo.TableOrViewName%>]

GO

<% If GrantExecute <> "" Then %>
GRANT EXEC ON <%=objInfo.DbOwner%>[<%=objInfo.FetchCommandText%>] TO <%=GrantExecute%>

GO
<%End If%>
<% Else %>
IF EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND name = '<%=objInfo.FetchCommandText%>')

	BEGIN
		PRINT 'Dropping Procedure <%=objInfo.FetchCommandText%>'
		DROP  Procedure  <%=objInfo.DbOwner%>[<%=objInfo.FetchCommandText%>]
	END

GO

PRINT 'Creating Procedure <%=objInfo.FetchCommandText%>'
GO

CREATE Procedure <%=objInfo.DbOwner%>[<%=objInfo.FetchCommandText%>]
	<% For i AS Int32 = 0 To objInfo.UniqueProperties.Count - 1 %>
	@<%=objInfo.UniqueProperties.Item(i).DbColumnName%> AS <%=objInfo.UniqueProperties.Item(i).SqlType%>
	<% Next %>
AS
/******************************************************************************
**      Name: <%=objInfo.FetchCommandText%>
**      Desc: Gets a single <%=ObjectName%>
** 
**      Called by: <%=objInfo.NameAndSuffix%>
**
**      Generated by CSLA 2.0 CodeSmith Template Collection
**      Date:   <%=Now.ToString("MM/dd/yyyy")%>
*******************************************************************************
**      Change History
*******************************************************************************
**      Date:       Author:         Description:
**      --------    --------        -------------------------------------------
**		
*******************************************************************************/
SET NOCOUNT ON

SELECT
	<% For i AS Int32 = 0 To objInfo.Properties.Count - 1 %>
	[<%=objInfo.Properties.Item(i).DbColumnName%>]<% If i < (objInfo.Properties.Count - 1) Then %>,<% End If %>
	<% Next %>
FROM <%=objInfo.DbOwner%>[<%=objInfo.TableOrViewName%>]
WHERE [<%=objInfo.UniqueProperties.Item(0).DbColumnName%>] = @<%=objInfo.UniqueProperties.Item(0).DbColumnName%>
<% For i AS Int32 = 1 To objInfo.UniqueProperties.Count - 1 %>
AND [<%=objInfo.UniqueProperties.Item(i).DbColumnName%>] = @<%=objInfo.UniqueProperties.Item(i).DbColumnName%>
<% Next %>

GO

<% If GrantExecute <> "" Then %>
GRANT EXEC ON <%=objInfo.DbOwner%>[<%=objInfo.FetchCommandText%>] TO <%=GrantExecute%>

GO
<%End If%>

<% If Not objInfo.IsReadOnly Then %>
---------------------------------------------------------------------------------------------------

IF EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND name = '<%=objInfo.InsertCommandText%>')

	BEGIN
		PRINT 'Dropping Procedure <%=objInfo.InsertCommandText%>'
		DROP  Procedure  <%=objInfo.DbOwner%>[<%=objInfo.InsertCommandText%>]
	END

GO

PRINT 'Creating Procedure <%=objInfo.InsertCommandText%>'
GO

CREATE Procedure <%=objInfo.DbOwner%>[<%=objInfo.InsertCommandText%>]
<%=GetInsertSqlParameters(objInfo, 1)%>
AS
/******************************************************************************
**      Name: <%=objInfo.InsertCommandText%>
**      Desc: Insert a <%=ObjectName%>
** 
**      Called by: <%=objInfo.NameAndSuffix%>
**
**      Generated by CSLA 2.0 CodeSmith Template Collection
**      Date:   <%=Now.ToString("MM/dd/yyyy")%>
*******************************************************************************
**      Change History
*******************************************************************************
**      Date:       Author:         Description:
**      --------    --------        -------------------------------------------
**		
*******************************************************************************/
SET NOCOUNT ON

<% For i AS Int32 = 0 To objInfo.UniqueProperties.Count - 1 %>
<% If objInfo.UniqueProperties.Item(i).SqlType = "UniqueIdentifier" Then %>
SET @new_<%=objInfo.UniqueProperties.Item(i).DbColumnName%> = NEWID()

<% End If %>
<% Next %>
INSERT INTO <%=objInfo.DbOwner%>[<%=objInfo.TableOrViewName%>] (
	<% For i AS Int32 = 0 To objInfo.Properties.Count - 1 %>
	<% If Not objInfo.Properties.Item(i).IsIdentity Then %>
	[<%=objInfo.Properties.Item(i).DbColumnName%>]<% If i < (objInfo.Properties.Count - 1) Then %>,<% End If %>
	<% End If %>
	<% Next %>
) VALUES (
	<% For i AS Int32 = 0 To objInfo.Properties.Count - 1 %>
	<% If Not objInfo.Properties.Item(i).IsIdentity Then %>
	@<% If objInfo.Properties.Item(i).IsDbComputed Then %>new_<% End If %><%=objInfo.Properties.Item(i).DbColumnName%><% If i < (objInfo.Properties.Count - 1) Then %>,<% End If %>
	<% End If %>
	<% Next %>
)

<% For i AS Int32 = 0 To objInfo.Properties.Count - 1 %>
<% If objInfo.Properties.Item(i).IsIdentity Then  %>
SET @new_<%=objInfo.Properties.Item(i).DbColumnName%> = @@IDENTITY

<% End If %>
<% Next %>
GO

<% If GrantExecute <> "" Then %>
GRANT EXEC ON <%=objInfo.DbOwner%>[<%=objInfo.InsertCommandText%>] TO <%=GrantExecute%>

GO
<%End If%>

---------------------------------------------------------------------------------------------------

IF EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND name = '<%=objInfo.UpdateCommandText%>')

	BEGIN
		PRINT 'Dropping Procedure <%=objInfo.UpdateCommandText%>'
		DROP  Procedure  <%=objInfo.DbOwner%>[<%=objInfo.UpdateCommandText%>]
	END

GO

PRINT 'Creating Procedure <%=objInfo.UpdateCommandText%>'
GO

CREATE Procedure <%=objInfo.DbOwner%>[<%=objInfo.UpdateCommandText%>]
	<% For i AS Int32 = 0 To objInfo.Properties.Count - 1 %>
	@<%=objInfo.Properties.Item(i).DbColumnName%> AS <%=objInfo.Properties.Item(i).SqlType%><% If i < (objInfo.Properties.Count - 1) Then %>,<% End If %>
	<% Next %>
AS
/******************************************************************************
**      Name: <%=objInfo.UpdateCommandText%>
**      Desc: Update a <%=ObjectName%>
** 
**      Called by: <%=objInfo.NameAndSuffix%>
**
**      Generated by CSLA 2.0 CodeSmith Template Collection
**      Date:   <%=Now.ToString("MM/dd/yyyy")%>
*******************************************************************************
**      Change History
*******************************************************************************
**      Date:       Author:         Description:
**      --------    --------        -------------------------------------------
**		
*******************************************************************************/
SET NOCOUNT ON

UPDATE <%=objInfo.DbOwner%>[<%=objInfo.TableOrViewName%>] SET
	<% For i AS Int32 = 0 To objInfo.Properties.Count - 1 %>
	<% If Not objInfo.Properties.Item(i).IsPrimaryKey Then %>
	[<%=objInfo.Properties.Item(i).DbColumnName%>] = @<%=objInfo.Properties.Item(i).DbColumnName%><% If i < (objInfo.Properties.Count - 1) Then %>,<% End If %>
	<% End If %>
	<% Next %>
WHERE [<%=objInfo.UniqueProperties.Item(0).DbColumnName%>] = @<%=objInfo.UniqueProperties.Item(0).DbColumnName%>
<% For i AS Int32 = 1 To objInfo.UniqueProperties.Count - 1 %>
AND [<%=objInfo.UniqueProperties.Item(i).DbColumnName%>] = @<%=objInfo.UniqueProperties.Item(i).DbColumnName%>
<% Next %>

GO

<% If GrantExecute <> "" Then %>
GRANT EXEC ON <%=objInfo.DbOwner%>[<%=objInfo.UpdateCommandText%>] TO <%=GrantExecute%>

GO

---------------------------------------------------------------------------------------------------

IF EXISTS (SELECT * FROM sysobjects WHERE type = 'P' AND name = '<%=objInfo.DeleteCommandText%>')

	BEGIN
		PRINT 'Dropping Procedure <%=objInfo.DeleteCommandText%>'
		DROP  Procedure  <%=objInfo.DbOwner%>[<%=objInfo.DeleteCommandText%>]
	END

GO

PRINT 'Creating Procedure <%=objInfo.DeleteCommandText%>'
GO

CREATE Procedure <%=objInfo.DbOwner%>[<%=objInfo.DeleteCommandText%>]
	<% For i AS Int32 = 0 To objInfo.UniqueProperties.Count - 1 %>
	@<%=objInfo.UniqueProperties.Item(i).DbColumnName%> AS <%=objInfo.UniqueProperties.Item(i).SqlType%>
	<% Next %>
AS
/******************************************************************************
**      Name: <%=objInfo.DeleteCommandText%>
**      Desc: Deletes a <%=ObjectName%>
** 
**      Called by: <%=objInfo.NameAndSuffix%>
**
**      Generated by CSLA 2.0 CodeSmith Template Collection
**      Date:   <%=Now.ToString("MM/dd/yyyy")%>
*******************************************************************************
**      Change History
*******************************************************************************
**      Date:       Author:         Description:
**      --------    --------        -------------------------------------------
**		
*******************************************************************************/
SET NOCOUNT ON

DELETE FROM <%=objInfo.DbOwner%>[<%=objInfo.TableOrViewName%>]
WHERE [<%=objInfo.UniqueProperties.Item(0).DbColumnName%>] = @<%=objInfo.UniqueProperties.Item(0).DbColumnName%>
<% For i AS Int32 = 1 To objInfo.UniqueProperties.Count - 1 %>
AND [<%=objInfo.UniqueProperties.Item(i).DbColumnName%>] = @<%=objInfo.UniqueProperties.Item(i).DbColumnName%>
<% Next %>

GO

<% If GrantExecute <> "" Then %>
GRANT EXEC ON <%=objInfo.DbOwner%>[<%=objInfo.DeleteCommandText%>] TO <%=GrantExecute%>

GO
<%End If%>
<%End If%>
<% End If %>
<% End If %>
